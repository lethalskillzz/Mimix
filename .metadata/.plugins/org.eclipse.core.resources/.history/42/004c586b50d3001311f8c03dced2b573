package com.lethalsys.mimix;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.BasicResponseHandler;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;


public class LoginActivity extends Activity implements OnClickListener{
	
	public final static String EXTRA_MESSAGE = "com.lethalsys.mimix.MESSAGE";
	
	//public final static String SERVER = "http://10.0.2.2/Twitter-Engine/";
	//public final static String SERVER = "http://route.pixub.com/";
	
	private ProgressDialog pDialog;
	
	private EditText Usernamevalue;
	private EditText Passwordvalue;
	private Button btn;
	//private ProgressBar pb;
	private String iresponse;
	private String[] Data;
	private ImageView  main_image;
	
	UseID_Database uidhelper=null;
	
	public static ConnectivityManager mConnectivityManager;
	public static NetworkInfo mNetworkInfo;
	
	JSONArray data = null;
	String msg;
	String userid;
	String user_name;
	String pass_word;

	engine r;
	String URL;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_login);
	
	uidhelper=new UseID_Database(this);
	//r = new engine();
	
	//if(uidhelper.getID()!=null)
	if("x".compareTo(uidhelper.getID())!=0)
	{
		Go_Home();
		ClosMe();		
		//Toast.makeText(this, "not_empty", Toast.LENGTH_LONG).show();
	}
	


	setTitle("Login");
	
	Usernamevalue=(EditText)findViewById(R.id.user_edttxt);
	Passwordvalue=(EditText)findViewById(R.id.pwd_edttxt);
	btn=(Button)findViewById(R.id.login_button);
	//pb=(ProgressBar)findViewById(R.id.progressBar);
	//pb.setVisibility(View.GONE);
	btn.setOnClickListener(this);
	
	main_image=(ImageView)findViewById(R.id.main_img);	
	main_image.setImageResource(R.drawable.ic_main);
	
	
	}
	
	
    public void startReg(View view) {
    	Intent intent = new Intent(this, MainActivity.class);
    	startActivity(intent);
    	}  
    
    
    
    public void Go_Home() {
    	Intent intent = new Intent(this, HomeActivity.class);
    	//intent.putExtra(EXTRA_MESSAGE, Data[1]);
    	startActivity(intent);
    	}  
    
    public void onClick(View v) {
    
    	if(Usernamevalue.getText().toString().length()<1){
    		Toast.makeText(this, "please enter username", Toast.LENGTH_LONG).show();
    	}
    	if(Passwordvalue.getText().toString().length()<1){
    		Toast.makeText(this, "please enter password", Toast.LENGTH_LONG).show();
    	}else{
    	//pb.setVisibility(View.VISIBLE);
        
    	    mConnectivityManager= (ConnectivityManager) this.getSystemService(Context.CONNECTIVITY_SERVICE);
    	    mNetworkInfo = mConnectivityManager.getActiveNetworkInfo();

    	    if (mNetworkInfo != null && mNetworkInfo.isConnectedOrConnecting())
    	    {
            
            	 new MyAsyncTask().execute();
            }
            else
            {
            	Toast.makeText(this, "Network Error: No Internet Connection", Toast.LENGTH_LONG).show();
            }
           
           
            

    	}
    	 
    	}
    
    
    private class MyAsyncTask extends AsyncTask<String, Integer, Double>{
    	 
 
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			pDialog = new ProgressDialog(LoginActivity.this);
			pDialog.setMessage("login in...");
			pDialog.setIndeterminate(false);
			pDialog.setCancelable(false);
			pDialog.show();
		}
    	
    	@Override
    	protected Double doInBackground(String... params) {
    	// TODO Auto-generated method stub
    	postData();
    	return null;
    	}
    	 
    	protected void onPostExecute(Double result){
    	//pb.setVisibility(View.GONE);
    	
    	//Toast.makeText(getApplicationContext(), "command sent", Toast.LENGTH_LONG).show();
    	//iresponse = Xml.parse(getResponseBody(response), new CustomXmlParser()); /*response.getStatusLine().getReasonPhrase();response.toString();*/

        if(iresponse.trim().length()!=0)
        {

        //Data  = iresponse.trim().split(":");
        	//Toast.makeText(getApplicationContext(), iresponse.trim(), Toast.LENGTH_LONG).show();
    	
    		try{
    			
    			
    			JSONObject jsonObj = new JSONObject(iresponse.trim()); 
    			

    			
    			data = jsonObj.getJSONArray("data");
    			
    			if(data!=null)
    			{
    			
    			
    			
    			JSONObject d = data.getJSONObject(0);
    		    msg = d.getString("msg");
    		     
    		    
            	if("LOGGED IN!".compareTo(msg)==0)
            	{
            		userid = d.getString("uid");
            		user_name = d.getString("user_name");
            		pass_word = d.getString("pass_word");
            		
            		uidhelper.Clear();		
            	    uidhelper.insert(userid,user_name,pass_word);
            	    
            	    
            	    pDialog.setMessage("login successful");
            	    pDialog.dismiss();
            	    
            	    
            		Go_Home();
            		ClosMe();
            	}
            	else
            	{
            		Toast.makeText(getApplicationContext(), msg, Toast.LENGTH_LONG).show();
            		pDialog.dismiss();
            	}

    			}
    		    
    		} catch (JSONException e){
    			
    		} 
    	
    		
        	
            }
       	
    	
    	}
    	
    	
    	protected void onProgressUpdate(Integer... progress){
    	//pb.setProgress(progress[0]);
    	}
    	 
    	protected void postData() {
    		
    	//URL = SERVER+"loginA.php";	
    	// Create a new HttpClient and Post Header
        HttpClient httpclient = new DefaultHttpClient();
    	
        
        HttpPost httppost = new HttpPost("http://10.0.2.2/Twitter-Engine/loginA.php");
    	//HttpPost httppost = new HttpPost("http://route.pixub.com/loginA.php");
    	
    	
    	//HttpPost httppost = new HttpPost(URL);
    	//String Header = "REG";
    	 
    	try {
    		
    	
    	// Add your data
    	List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
    	//nameValuePairs.add(new BasicNameValuePair("PacketHead",Header ));
    	nameValuePairs.add(new BasicNameValuePair("username", Usernamevalue.getText().toString()));
    	nameValuePairs.add(new BasicNameValuePair("password", Passwordvalue.getText().toString()));
    	httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
    	ResponseHandler<String> responseHandler = new BasicResponseHandler();
    	 

    	//HttpResponse response;

    	
    	// Execute HTTP Post Request
    	 iresponse = httpclient.execute(httppost, responseHandler);
    	 

    	  
    	 
    	} catch (ClientProtocolException e) {
    	// TODO Auto-generated catch block
    		pDialog.dismiss();	
    		new MyAsyncTask().cancel(true);
    		Toast.makeText(getApplicationContext(), "Network Error!", Toast.LENGTH_LONG).show();		
    	} catch (IOException e) {
    	// TODO Auto-generated catch block
    		pDialog.dismiss();	
    		new MyAsyncTask().cancel(true);
    		Toast.makeText(getApplicationContext(), "Network Error!", Toast.LENGTH_LONG).show();	
    	}
    	
    	catch (Exception e) {
        	// TODO Auto-generated catch block
        		pDialog.dismiss();	
        		new MyAsyncTask().cancel(true);
        		Toast.makeText(getApplicationContext(), "Network Error!", Toast.LENGTH_LONG).show();
    	}
    	
    	

    	}
    	 
    	}
    
    
    
    
    /**
     * Checks if the device has Internet connection.
     * 
     * @return <code>true</code> if the phone is connected to the Internet.
     */
      public static boolean checkNetworkConnection(Context context)
      {
          final ConnectivityManager connMgr = (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);

          final android.net.NetworkInfo wifi =connMgr.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
          final android.net.NetworkInfo mobile =connMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);

          if(wifi.isAvailable()||mobile.isAvailable())
              return true;
          else
              return false;
      }    
    
    
      
    public void ClosMe() {

    Intent intent = getIntent();
    //overridePendingTransition(0, 0);
    //intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
    overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
    finish();
}
    
}


