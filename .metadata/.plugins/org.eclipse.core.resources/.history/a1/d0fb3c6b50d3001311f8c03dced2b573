package com.lethalsys.mimix;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.BasicResponseHandler;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.util.Base64;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

@SuppressWarnings("deprecation")
public class PostActivity extends Activity implements OnClickListener {

	private EditText Postvalue;
	String iresponse;
	private Button btn;
	String UserID;
	
	private ImageView image;
	private Bitmap bitmap;
	byte[] data;
	String file=null;

	// number of images to select
	private static final int PICK_IMAGE = 1;

	
	UseID_Database uidhelper;
	
	public static Handler PostActivityHandler = null;
	private ProgressDialog pDialog;

	public static ConnectivityManager mConnectivityManager;
	public static NetworkInfo mNetworkInfo;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_post);
		
	    Postvalue=(EditText)findViewById(R.id.post_edttxt);
	    btn=(Button)findViewById(R.id.Post_button);
		btn.setOnClickListener(this);
		
		image = (ImageView) findViewById(R.id.post_img);
			
		/*Intent intent = getIntent();
	    UserID = intent.getStringExtra(HomeActivity.EXTRA_MESSAGE2);*/
	    
		
		uidhelper=new UseID_Database(this);
		
	    UserID = uidhelper.getID();
		
		//Toast.makeText(this,UserID , Toast.LENGTH_LONG).show();
	    


		
		
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.post, menu);
		return true;
	}*/
	
	
    public void onClick(View v) {

    	if(Postvalue.getText().toString().length()<1 && file==null ){
    		Toast.makeText(this, "Post can not be empty", Toast.LENGTH_LONG).show();
    	}else{

    	    mConnectivityManager= (ConnectivityManager) this.getSystemService(Context.CONNECTIVITY_SERVICE);
    	    mNetworkInfo = mConnectivityManager.getActiveNetworkInfo();

    	    if (mNetworkInfo != null && mNetworkInfo.isConnectedOrConnecting())
    	    {
                if(file!=null)
                {
                	new MyAsyncTask().execute("add_post_img");
                }
                else
                {
    	    	new MyAsyncTask().execute("add_post");
                }
            }
            else
            {
            	Toast.makeText(this, "Network Error: No Internet Connection", Toast.LENGTH_LONG).show();
            }	
    	
    	}
    
    	
    }
    
    
	
    public void get_img(View v) {
    
    	selectImageFromGallery();
    }
    /*public void GoPost() {
    	if(Postvalue.getText().toString().length()<1){
    		Toast.makeText(this, "post cannot be empty", Toast.LENGTH_LONG).show();
    	}else{

    	new MyAsyncTask().execute("REG");	
    }
    	
    }*/
    public void GoHome() {
	Intent Profintent = new Intent(this, HomeActivity.class);
	startActivity(Profintent);
    }
    
    
    
	/**
	 * Opens dialog picker, so the user can select image from the gallery. The
	 * result is returned in the method <code>onActivityResult()</code>
	 */
	public void selectImageFromGallery() {
		Intent intent = new Intent();
		intent.setType("image/*");
		intent.setAction(Intent.ACTION_GET_CONTENT);
		startActivityForResult(Intent.createChooser(intent, "Select Picture"),
				PICK_IMAGE);
	}

	/**
	 * Retrives the result returned from selecting image, by invoking the method
	 * <code>selectImageFromGallery()</code>
	 */
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		if (requestCode == PICK_IMAGE && resultCode == RESULT_OK
				&& null != data) {
			Uri selectedImage = data.getData();
			String[] filePathColumn = { MediaStore.Images.Media.DATA };

			Cursor cursor = getContentResolver().query(selectedImage,
					filePathColumn, null, null, null);
			cursor.moveToFirst();

			int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
			String picturePath = cursor.getString(columnIndex);
			cursor.close();

			decodeFile(picturePath);

		}
	}

	/**
	 * The method decodes the image file to avoid out of memory issues. Sets the
	 * selected image in to the ImageView.
	 * 
	 * @param filePath
	 */
	public void decodeFile(String filePath) {
		// Decode image size
		BitmapFactory.Options o = new BitmapFactory.Options();
		o.inJustDecodeBounds = true;
		BitmapFactory.decodeFile(filePath, o);

		// The new size we want to scale to
		final int REQUIRED_SIZE = 512;

		// Find the correct scale value. It should be the power of 2.
		int width_tmp = o.outWidth, height_tmp = o.outHeight;
		int scale = 1;
		while (true) {
			if (width_tmp < REQUIRED_SIZE && height_tmp < REQUIRED_SIZE)
				break;
			width_tmp /= 2;
			height_tmp /= 2;
			scale *= 2;
		}

		// Decode with inSampleSize
		BitmapFactory.Options o2 = new BitmapFactory.Options();
		o2.inSampleSize = scale;
		bitmap = BitmapFactory.decodeFile(filePath, o2);

		image.setImageBitmap(bitmap);
		
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		bitmap.compress(CompressFormat.JPEG, 100, bos);
		data = bos.toByteArray();
		int flag = 0;
		file = Base64.encodeToString(data, flag);//encodeBytes(data);
	}
    
    
    
    private class MyAsyncTask extends AsyncTask<String, Integer, Double>{
      	 
    	@Override
    	protected Double doInBackground(String... params) {
    	// TODO Auto-generated method stub
    	postData(params[0]);
    	return null;
    	}
    	
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			
			pDialog = new ProgressDialog(PostActivity.this);
			pDialog.setMessage("adding post...");
			pDialog.setIndeterminate(false);
			pDialog.setCancelable(true);
			pDialog.show();
			
		}
    	 
    	protected void onPostExecute(Double result){

            if(iresponse.trim().length()!=0)
            {    		
            	//Toast.makeText(getApplicationContext(),iresponse.trim() , Toast.LENGTH_LONG).show();
            	sendmsg();
            	ClosMe();
            	 //GoHome();
    
           	    pDialog.setMessage("post added");	    
        	    pDialog.dismiss();
            }
    	
             
    	
    	}
    	
    	
    	
    	protected void postData(String Header) {
    	// Create a new HttpClient and Post Header
    	HttpClient httpclient = new DefaultHttpClient();
    	HttpContext localContext = new BasicHttpContext();
    	
    	//HttpPost httppost = new HttpPost("http://10.0.2.2/Twitter-Engine/add_post.php");
    	HttpPost httppost = new HttpPost("http://10.0.2.2/Twitter-Engine/add_get_post.php");
    	//HttpPost httppost = new HttpPost("http://route.pixub.com/add_get_post.php");
    	
    	//String Header = "add_post";
		
    	 
    	try {
    		
    		
        MultipartEntity entity = new MultipartEntity(
        HttpMultipartMode.BROWSER_COMPATIBLE);
        
        entity.addPart("PacketHead", new StringBody(Header));
        entity.addPart("UID", new StringBody(UserID));
        entity.addPart("post_body", new StringBody(Postvalue.getText().toString()));
       	if(Header.compareTo("add_post_img")==0)
    	{	
    	 entity.addPart("post_img", new StringBody(file));
    	}
        
        
    /*	// Add your data	
    	List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
    	nameValuePairs.add(new BasicNameValuePair("PacketHead",Header ));
    	nameValuePairs.add(new BasicNameValuePair("UID",UserID));
    	nameValuePairs.add(new BasicNameValuePair("post_body", Postvalue.getText().toString()));
    	if(Header.compareTo("add_post_img")==0)
    	{	
    	nameValuePairs.add(new BasicNameValuePair("post_img",file));
    	}
    	httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));*/
       	
       	httppost.setEntity(entity);
       	
    	ResponseHandler<String> responseHandler = new BasicResponseHandler();
    	 

    	//HttpResponse response;

    	
    	// Execute HTTP Post Request
    	 iresponse = httpclient.execute(httppost, responseHandler);
    	 


    	 
    	} catch (ClientProtocolException e) {
    	// TODO Auto-generated catch block
    		Toast.makeText(getApplicationContext(), "Network Error!", Toast.LENGTH_LONG).show();
    		pDialog.dismiss();
    		cancel(true);
    	} catch (IOException e) {
    	// TODO Auto-generated catch block
    	}


    	}
    	 
    	}
	
	
    
    public void sendmsg()
    {
      
        PostActivityHandler = new Handler();
     
        if(null != HomeActivity.mUiHandler)
        {
            //first build the message and send.
            //put a integer value here and get it from the Activity handler
            //For Example: lets use 0 (msg.what = 0;)
            //for receiving service running status in the activity
            Message msgToActivity = new Message();
            msgToActivity.what = 1;
            HomeActivity.mUiHandler.sendMessage(msgToActivity);
        } 
    }
    
    
    
    public void ClosMe() {

    Intent intent = getIntent();
    overridePendingTransition(0, 0);
    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
    finish();
}
	
	

}
