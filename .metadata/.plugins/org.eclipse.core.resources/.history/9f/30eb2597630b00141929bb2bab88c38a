package com.lethalsys.mimix;

import java.util.ArrayList;
import java.util.List;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ExpandableListActivity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.CheckedTextView;
import android.widget.ExpandableListView;
import android.widget.TextView;

@SuppressLint("NewApi")
public class QuizSelectActivity extends  ExpandableListActivity {
	
	private ArrayList<String> parentItems = new ArrayList<String>();
	private ArrayList<Object> childItems = new ArrayList<Object>();
	
	ExpandableListView expandableList;
	
	Quiz_Database quizhelper;
	
	public static Handler   QSHandler = null;


	MyExpandableAdapter adapter = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		//setContentView(R.layout.activity_quiz_select);
		
		
	    expandableList = getExpandableListView(); // you can use (ExpandableListView) findViewById(R.id.list)
		
		expandableList.setDividerHeight(2);
		expandableList.setClickable(true);
		
	    quizhelper = new Quiz_Database(this);
	    //quizhelper.insertQuiz("Zis is a question", "zis is z answer", "zis is z option1", "zis is z option2", "zis is z option3");

		

        /*int right = (int) (getResources().getDisplayMetrics().widthPixels - 
        TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30,getResources().getDisplayMetrics()));
        expandableList.setIndicatorBounds(right - getResources().getDrawable
        (R.drawable.lv_indicator1).getIntrinsicWidth(), right);*/
		
		
        
		setGroupParents();
		setChildData();

	    adapter = new MyExpandableAdapter(parentItems, childItems);
		
		adapter.setInflater((LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE), this);
		expandableList.setAdapter(adapter);
		expandableList.setOnChildClickListener(this);
		
	

		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.quiz_select, menu);
		return true;
	}
	
	public int GetPixelFromDips(float pixels) {
	     // Get the screen's density scale
	     final float scale = getResources().getDisplayMetrics().density;
	     // Convert the dps to pixels, based on density scale
	     return (int) (pixels * scale + 0.5f);
	    }
	
	
	  @Override
	    public void onWindowFocusChanged(boolean hasFocus) {
	        super.onWindowFocusChanged(hasFocus);
	        DisplayMetrics metrics = new DisplayMetrics();
	        getWindowManager().getDefaultDisplay().getMetrics(metrics);
	        int width = metrics.widthPixels;
	        if(android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.JELLY_BEAN_MR2) {
	        expandableList.setIndicatorBounds(width-GetPixelFromDips(35), width-
	GetPixelFromDips(5));
	} else {
		expandableList.setIndicatorBoundsRelative(width-GetPixelFromDips(35),
	width-GetPixelFromDips(5));
	        }
	    }

	public void setGroupParents() {
		parentItems.add("100 level");
		parentItems.add("200 level");
		parentItems.add("300 level");
		parentItems.add("400 level");
	}

	public void setChildData() {
		
		// Android
		ArrayList<String> child = new ArrayList<String>();
		child.add("Engineering");
		child.add("Science");
		child.add("Enviromental");
		child.add("Education");
		child.add("Agric");
		child.add("ICT");
		child.add("Entrapreneurship");
		childItems.add(child);
		
		
		// Core Java
		child = new ArrayList<String>();
		child.add("Engineering");
		child.add("Science");
		child.add("Enviromental");
		child.add("Education");
		child.add("Agric");
		child.add("ICT");
		child.add("Entrapreneurship");
		childItems.add(child);
		
		// Desktop Java
		child = new ArrayList<String>();
		child.add("Engineering");
		child.add("Science");
		child.add("Enviromental");
		child.add("Education");
		child.add("Agric");
		child.add("ICT");
		child.add("Entrapreneurship");
		childItems.add(child);
		
		
		// Enterprise Java
		child = new ArrayList<String>();
		child.add("Engineering");
		child.add("Science");
		child.add("Enviromental");
		child.add("Education");
		child.add("Agric");
		child.add("ICT");
		child.add("Entrapreneurship");
		childItems.add(child);

	}
	
	
	
	public void GoDept(){
		
    	Intent intent = new Intent(this, QuizSelect2Activity.class);
    	//intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_TASK_ON_HOME);
    	//intent.putExtra(EXTRA_MESSAGE, Data[1]);
    	startActivity(intent);
	}
	


        class MyExpandableAdapter extends BaseExpandableListAdapter {

		private Activity activity;
		private ArrayList<Object> childtems;
		private LayoutInflater inflater;
		private ArrayList<String> parentItems, child;

		

		public MyExpandableAdapter(ArrayList<String> parents, ArrayList<Object> childern) {
			this.parentItems = parents;
			this.childtems = childern;
		}

		public void setInflater(LayoutInflater inflater, Activity activity) {
			this.inflater = inflater;
			this.activity = activity;
		}

		
		@Override
		public View getChildView(int groupPosition, final int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
			
			child = (ArrayList<String>) childtems.get(groupPosition);
			
			TextView textView = null;
			
			if (convertView == null) {
				convertView = inflater.inflate(R.layout.quiz_lvgroup, null);
			}
			
			textView = (TextView) convertView.findViewById(R.id.textView1);
			textView.setText(child.get(childPosition));
			
			convertView.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View view) {
					/*Toast.makeText(activity, child.get(childPosition),
							Toast.LENGTH_SHORT).show();*/
					GoDept();
					
				}
			});
			
			return convertView;
		}
		
		

		
		
		@Override
		public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {
			
			if (convertView == null) {
				convertView = inflater.inflate(R.layout.quiz_lvrow, null);
			}
			
			((CheckedTextView) convertView).setText(parentItems.get(groupPosition));
			((CheckedTextView) convertView).setChecked(isExpanded);
			
			return convertView;
		}

		@Override
		public Object getChild(int groupPosition, int childPosition) {
			return null;
		}

		@Override
		public long getChildId(int groupPosition, int childPosition) {
			return 0;
		}

		@Override
		public int getChildrenCount(int groupPosition) {
			return ((ArrayList<String>) childtems.get(groupPosition)).size();
		}

		@Override
		public Object getGroup(int groupPosition) {
			return null;
		}

		@Override
		public int getGroupCount() {
			return parentItems.size();
		}

		@Override
		public void onGroupCollapsed(int groupPosition) {
			super.onGroupCollapsed(groupPosition);
		}

		@Override
		public void onGroupExpanded(int groupPosition) {
			super.onGroupExpanded(groupPosition);
		}

		@Override
		public long getGroupId(int groupPosition) {
			return 0;
		}

		

		@Override
		public boolean hasStableIds() {
			return false;
		}

		@Override
		public boolean isChildSelectable(int groupPosition, int childPosition) {
			return false;
		}



	}



	

	
}